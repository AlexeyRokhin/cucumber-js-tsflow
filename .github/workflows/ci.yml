
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master, add-ci-with-github-action ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1 
      with:
        node-version: '12.x'
        registry-url: 'https://npm.pkg.github.com'

    # Runs a single command using the runners shell
    - name: Install npm packages
      run: npm ci

    # Runs a set of commands using the runners shell
    - name: Run Test
      run: npm test
   
  publish:
    name: Publish to NPM & GitHub Package Registry
    runs-on: ubuntu-latest
    if: contains(github.ref, 'add-ci-with-github-action') # Publish it only if the push comes from the master branch
    needs: build # We need to wait for the build to be committed before publishing

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Check version changes
        uses: EndBug/version-check@v1
        id: check
        with:
          file-name: ./cucumber-tsflow/package.json
          diff-search: true

      - name: Version update detected
        if: steps.check.outputs.changed == 'true'
        run: 'echo "Version change found! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'

#      - name: Set up Node.js for NPM
#        if: steps.check.outputs.changed == 'true'
#        uses: actions/setup-node@v1
#        with:
#          registry-url: "https://registry.npmjs.org"
#
#      - name: Install dependencies
#        if: steps.check.outputs.changed == 'true'
#        run: npm install --only=prod
#
#      - name: Publish package to NPM
#        if: steps.check.outputs.changed == 'true'
#        run: npm publish
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Set up Node.js for GPR
        if: steps.check.outputs.changed == 'true'
        uses: actions/setup-node@v1
        with:
          registry-url: "https://npm.pkg.github.com/"
          scope: "@wudong"

      - name: Set up package for GPR # You need to make sure you package name has the scope needed for GPR
        if: steps.check.outputs.changed == 'true'
        working-directory: cucumber-tsflow
        run: node grp.js "$GITHUB_REPOSITORY"

      - name: Publish package to GPR
        if: steps.check.outputs.changed == 'true'
        run: ./node_modules/.bin/lerna publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
